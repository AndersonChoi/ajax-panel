{"version":3,"sources":["../src/ajax_ctrl.js"],"names":["MetricsPanelCtrl","$","_","kbn","TimeSeries","moment","panelDefaults","method","url","errorMode","params_js","AjaxCtrl","$scope","$injector","$q","templateSrv","$sce","$http","defaults","panel","events","on","onInitEditMode","bind","onPanelInitalized","requestCount","datasource","updateTimeRange","replace","scopedVars","params","params_fn","width","resolution","height","src","encodeURI","param","html","updateContent","error","loading","then","response","data","display_fn","err","console","warn","body","JSON","stringify","result","updateFN","editorTabs","splice","addEditorTab","pluginId","editorTabIndex","Function","ex","refresh","isNil","content","trustAsHtml","e","log","templateUrl"],"mappings":"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","file":"ajax_ctrl.js","sourcesContent":["import {MetricsPanelCtrl} from 'app/plugins/sdk';\r\nimport $ from 'jquery'\r\nimport _ from 'lodash';\r\nimport kbn from 'app/core/utils/kbn';\r\nimport TimeSeries from 'app/core/time_series';\r\nimport moment from 'moment';\r\nimport './css/ajax-panel.css!';\r\n\r\nconst panelDefaults = {\r\n  method: 'GET',\r\n  url: 'https://raw.githubusercontent.com/ryantxu/ajax-panel/master/static/example.txt',\r\n  errorMode: 'show',\r\n  params_js: \"{\\n\" +\r\n             \" from:ctrl.range.from.format('x'),  // x is unix ms timestamp\\n\" +\r\n             \" to:ctrl.range.to.format('x'), \\n\" +\r\n             \" height:ctrl.height\\n\" +\r\n             \"}\"\r\n};\r\n\r\nexport class AjaxCtrl extends MetricsPanelCtrl {\r\n  constructor($scope, $injector, $q, templateSrv, $sce, $http) {\r\n    super($scope, $injector);\r\n\r\n    this.$sce = $sce;\r\n    this.$http = $http;\r\n    this.$q = $q;\r\n    this.templateSrv = templateSrv;\r\n\r\n    _.defaults(this.panel, panelDefaults);\r\n\r\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\r\n    this.events.on('panel-initialized', this.onPanelInitalized.bind(this));\r\n\r\n    this.requestCount = 0;\r\n  }\r\n\r\n  // Rather than issue a datasource query, we will call our ajax request\r\n  issueQueries(datasource) {\r\n    this.updateTimeRange();\r\n\r\n    var url = this.templateSrv.replace(this.panel.url, this.panel.scopedVars); \r\n    var params;\r\n    if(this.params_fn) {\r\n      params = this.params_fn( this );\r\n    }\r\n    //console.log( \"onRender\", this, params );\r\n\r\n    if(this.panel.method === 'iframe') {   \r\n      var width = this.resolution - 50;   \r\n      var height = this.height - 10;   \r\n      var src = encodeURI(url + '&' + $.param(params));   \r\n      var html = `<iframe width='${width}' height='${height}' frameborder='0' src=${src}><\\/iframe>`;   \r\n      this.updateContent(html);   \r\n    }   \r\n    else {   \r\n      delete this.error;\r\n      this.requestCount++;\r\n      this.loading = true;\r\n      this.$http({\r\n        method: this.panel.method,\r\n        url: url,\r\n        params: params\r\n      }).then( response => {\r\n        var html = response.data;\r\n        if(this.display_fn) {\r\n          html = this.display_fn(this, response);\r\n        }\r\n        this.updateContent( html );\r\n        this.loading = false;\r\n      }, (err) => {\r\n        this.loading = false;\r\n        this.error = err; //.data.error + \" [\"+err.status+\"]\";\r\n      //  this.inspector = {error: err};\r\n\r\n        console.warn('error', err);\r\n        let body = '<h1>Error</h1><pre>' + JSON.stringify(err, null, \" \") + \"</pre>\";\r\n        this.updateContent(body);\r\n      });\r\n    }\r\n\r\n    // Return empty results\r\n    return null; //this.$q.when( [] );\r\n  }\r\n\r\n  // Overrides the default handling\r\n  handleQueryResult(result) {\r\n    // Nothing. console.log('handleQueryResult', result);\r\n  }\r\n\r\n  onPanelInitalized() {\r\n    this.updateFN();\r\n  }\r\n\r\n  onInitEditMode() {\r\n    this.editorTabs.splice(1,1); // remove the 'Metrics Tab'\r\n    this.addEditorTab('Options', 'public/plugins/' + this.pluginId + '/editor.html',1);\r\n    this.editorTabIndex = 1;\r\n\r\n    this.updateFN();\r\n  }\r\n\r\n  onPanelTeardown() {\r\n   // this.$timeout.cancel(this.nextTickPromise);\r\n  }\r\n\r\n  updateFN() {\r\n    this.params_fn = null;\r\n    this.display_fn = null;\r\n\r\n    if(this.panel.params_js) {\r\n      try {\r\n        this.params_fn = new Function('ctrl', 'return ' + this.templateSrv.replace(this.panel.params_js, this.panel.scopedVars));\r\n      }\r\n      catch( ex ) {\r\n        console.warn('error parsing params_js', this.panel.params_js, ex );\r\n        this.params_fn = null;\r\n      }\r\n    }\r\n    this.refresh();\r\n  }\r\n\r\n  updateContent(html) {\r\n    if(_.isNil(html)) {\r\n      this.content = \"\";\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.content = this.$sce.trustAsHtml(this.templateSrv.replace(html, this.panel.scopedVars));\r\n    } catch (e) {\r\n      console.log('Text panel error: ', e);\r\n      this.content = this.$sce.trustAsHtml(html);\r\n    }\r\n  }\r\n}\r\n\r\nAjaxCtrl.templateUrl = 'module.html';\r\n"]}